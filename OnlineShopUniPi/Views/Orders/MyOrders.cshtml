@model List<OnlineShopUniPi.Models.Order>
@{
    ViewData["Title"] = "My Orders";
    Layout = "~/Views/Shared/_Layout.cshtml";

    // Get filter from ViewBag
    var filter = ViewBag.Filter as string ?? "Pending";
    var filters = new List<string> { "Pending", "History" };
}

<div class="container mt-5">
    <h2 class="mb-4">My Orders</h2>

    <!-- Filter dropdown -->
    <div class="mb-4">
        <label for="orderFilter" class="form-label">Filter:</label>
        <select id="orderFilter" class="form-select" style="width:200px;">
            @foreach (var f in filters)
            {
                if (filter == f)
                {
                    <option value="@f" selected>@f</option>
                }
                else
                {
                    <option value="@f">@f</option>
                }
            }
        </select>
    </div>

    <!-- Show all the orders -->
    @if (!Model.Any())
    {
        <p class="text-muted">No orders found.</p>
    }
    else
    {
        @foreach (var order in Model)
        {
            <div class="card mb-4 shadow-sm">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <div>
                        <strong>Order Number:</strong> @order.OrderId
                        <br />
                        <strong>Date:</strong> @(order.OrderDate?.ToString("dd/MM/yyyy HH:mm") ?? "-")
                    </div>
                    <div>
                        <strong>Status:</strong>
                        @if (order.OrderStatus == "Processing")
                        {
                            <select class="form-select d-inline-block w-auto order-status-select"
                                    data-order-id="@order.OrderId">
                                <option value="Processing" selected>Processing</option>
                                <option value="Completed">Completed</option>
                                <option value="Cancelled">Cancelled</option>
                            </select>
                        }
                        else
                        {
                            <span>@order.OrderStatus</span>
                        }
                    </div>
                </div>

                <div class="card-body">
                    <div class="row">
                        @foreach (var item in order.OrderItems ?? Enumerable.Empty<OnlineShopUniPi.Models.OrderItem>())
                        {
                            var mainImage = item.Product?.ProductImages
                            ?.FirstOrDefault(img => img.IsMainImage == true)?.ImageUrl
                            ?? item.Product?.ProductImages?.FirstOrDefault()?.ImageUrl
                            ?? "images/resources/no_image.png";

                            <div class="col-md-4 mb-3">
                                <div class="card h-100">
                                    <img src="@Url.Content("~/" + mainImage.TrimStart('/'))" class="card-img-top" style="height:200px; object-fit:contain;" />
                                    <div class="card-body">
                                        <h5 class="card-title">@item.Product?.Title</h5>
                                        <p class="card-text">Price: €@item.Price</p>
                                        <p class="card-text">Quantity: @item.Quantity</p>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        }
    }
</div>

@section Scripts {
    <script>
        // Filter change
        document.getElementById('orderFilter')?.addEventListener('change', function () {
            const filter = this.value;
            window.location.href = `/Orders/MyOrders?filter=${filter}`;
        });

        // Order status change
        document.querySelectorAll('.order-status-select').forEach(function (select) {
            select.addEventListener('change', async function () {
                const orderId = parseInt(this.dataset.orderId);
                const status = this.value;

                try {
                    const response = await fetch('/Orders/UpdateOrderStatus', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value
                        },
                        body: JSON.stringify({ OrderId: orderId, Status: status })
                    });

                    const data = await response.json();
                    if (data.success) {
                        location.reload(); 
                    } else {
                        alert('Error updating order: ' + (data.message || ''));
                    }
                } catch (err) {
                    console.error(err);
                    alert('Error updating order.');
                }
            });
        });
    </script>
}